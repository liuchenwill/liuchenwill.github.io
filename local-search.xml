<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>2023高考押题卷</title>
    <link href="/2023/04/26/2023%E9%AB%98%E8%80%83%E6%8A%BC%E9%A2%98%E5%8D%B7/"/>
    <url>/2023/04/26/2023%E9%AB%98%E8%80%83%E6%8A%BC%E9%A2%98%E5%8D%B7/</url>
    
    <content type="html"><![CDATA[<p><strong>文章末有往年试用</strong></p><p>23年高考押题卷开更了！<br>高考押题卷都是各大权威机构根据高考最新考纲预测考题，都是一些【原创】【创新】的高质量题。也是最接近高考难度和类型的试卷。</p><h2 id="2023押题卷"><a href="#2023押题卷" class="headerlink" title="2023押题卷"></a>2023押题卷</h2><p>今年的价格依旧是<strong>59￥</strong>包括所有机构，所有科目！！！</p><p>使用两套模拟卷的价格就能买到最权威的<strong>押题卷</strong><br>价格已经很优惠了，不再议价！！！<br>即日起更新至6.7号，包括市面上所有押题卷。包含<strong>新高考与全国卷文理科</strong><br>包括且不限于以下（太多，不列了）<br>待更新 黑白卷押题卷<br>待更新 学科网押题卷<br>待更新 天一镕尚最后一卷<br>待更新 金太阳泄露天机押题卷<br>待更新 天利38套临考押题卷<br>待更新 高考快递临考押题卷<br>待更新 衡水密卷押题卷<br>待更新 王后雄倍多分押题卷<br>待更新 2023王后雄千校联盟终极押题卷<br>等等后续还会有各省市地方的押题卷更新</p><p>所有押题卷都已百度网盘形式发布</p><p>下图是<strong>往年发布</strong>，5.1号起持续大量更新今年</p><p><img src="https://s1.ax1x.com/2022/05/12/OBkkDA.jpg" alt="OBkkDA.jpg"></p><p>试卷质量都是<strong>特别高清，严格排版。</strong></p><p><img src="https://s1.ax1x.com/2022/05/10/ON7Q8H.png" alt="ON7Q8H.png"></p><p><strong>答案完整</strong>，<strong>高清无水印</strong>，方便自测。</p><h2 id="购买方式"><a href="#购买方式" class="headerlink" title="购买方式"></a>购买方式</h2><h3 id="微店（强烈推荐）"><a href="#微店（强烈推荐）" class="headerlink" title="微店（强烈推荐）"></a>微店（强烈推荐）</h3><p>下单付款秒发货，不浪费时间<br>活动专享微店链接： <a href="https://k.youshop10.com/QWw2ii1A">https://k.youshop10.com/QWw2ii1A</a></p><p>建议注册微店购买。提交订单后找<strong>更多支付方式</strong>，是可以微信支付宝支付的，不需要绑定银行卡。<br>请务必确认收货手机号是可以收到短信的。<br>付款后将收到如下短信，<strong>券码的就是百度网盘群号</strong>，打开<strong>百度网盘</strong>搜索群加入即可。（群号为九位数字）</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KsiqS.jpg" alt="p9KsiqS.jpg"></p><p>因商品为虚拟电子产品，收到短信即不能退款！</p><h3 id="QQ（经常不在线）"><a href="#QQ（经常不在线）" class="headerlink" title="QQ（经常不在线）"></a>QQ（经常不在线）</h3><h3 id="2169468487"><a href="#2169468487" class="headerlink" title="2169468487"></a>2169468487</h3><p>有购买意向的可以直接<strong>微店下单</strong>，微店问答更方便一些。</p><p>qq经常不在线，回复慢。有其他疑问再加qq问哦。</p><p>中午12：00 - 13.30， 晚上 20：30-21：30 在线</p><p><a href="https://imgse.com/i/p9Kr5CR"><img src="https://s1.ax1x.com/2023/04/26/p9Kr5CR.jpg" alt="p9Kr5CR.jpg"></a></p><h2 id="QA答疑"><a href="#QA答疑" class="headerlink" title="QA答疑"></a>QA答疑</h2><h3 id="Q1-押题卷怎么来的，有用吗？"><a href="#Q1-押题卷怎么来的，有用吗？" class="headerlink" title="Q1: 押题卷怎么来的，有用吗？"></a>Q1: 押题卷怎么来的，有用吗？</h3><p>押题卷都是学长买的正版官网的然后给大家扫描出来上传的，押题卷品质可以有保证，新高考，全国卷地区的押题卷都有。<br>押题卷不是制胜法宝，但是万一能压中题而你却没做这套卷子，岂不是后悔莫及，多做卷子并无害处！你就当练习题做，压中就是赚，没压题你也不亏，毕竟每天都在做题！更何况押题卷的质量是非常不错的！</p><h3 id="Q2-押题卷的质量怎么样？"><a href="#Q2-押题卷的质量怎么样？" class="headerlink" title="Q2:押题卷的质量怎么样？"></a>Q2:押题卷的质量怎么样？</h3><p>押题卷都是各大机构花很多钱请很多专家一起制作的，官网的价格更是不菲。但是押题卷的本质也是试卷，想要发挥它最大功效，就要把他当作高考试卷去训练去纠错。毕竟价格很贵啊！</p><p><a href="https://imgse.com/i/p9KrgDU"><img src="https://s1.ax1x.com/2023/04/26/p9KrgDU.jpg" alt="p9KrgDU.jpg"></a></p><h3 id="Q3-会不会是骗人？"><a href="#Q3-会不会是骗人？" class="headerlink" title="Q3: 会不会是骗人？"></a>Q3: 会不会是骗人？</h3><p><strong>诚信交易。</strong></p><p><strong>中国人不骗中国人</strong></p><h3 id="Q4-有哪些押题卷？适用于哪些地区？"><a href="#Q4-有哪些押题卷？适用于哪些地区？" class="headerlink" title="Q4:有哪些押题卷？适用于哪些地区？"></a>Q4:有哪些押题卷？适用于哪些地区？</h3><p>基本上能在淘宝能买到的一百以上的押题卷，都会有！！！包括了<strong>全国卷文理科与新高考</strong>地区。</p><p>押题卷会在五月份大量更新，持续更新到高考前。</p><h3 id="Q5-怎么使用押题卷"><a href="#Q5-怎么使用押题卷" class="headerlink" title="Q5:怎么使用押题卷"></a>Q5:怎么使用押题卷</h3><p>【1】做新题，沉着应试<br>由于押题卷的出题会结合最新模拟题，在题目的创新上还是有相当的价值的，大家在考前多见一些新题，这样在高考考场遇到没见过的题也不会手忙脚乱。把新题进行及时的总结，这样也可以对自己知识体系进行巩固。<br>【2】做高质题，查漏补缺<br>如果是比较好的押题卷，出题人也是很厉害的，他们出的题质量也是过关的。在考前可以利用押题卷对自己的知识进行全盘扫描，特别关注错题，找到自己漏洞，临考如果能突击解决几个漏洞提升还是很高的。<br>【3】模拟高考，锻炼心态<br>在考前把押题卷拿来练手是个不错的选择，可以相当的磨练做题手感。对于押题卷一定要计时完成，全真模拟高考状态，让自己上考场前先打赢心理战。<br>【4】碰运气，押中就赚到<br>反正都是刷题，还不如刷点有押中概率的题。万一押中一道题就是赚到，押不中试卷质量也不差，做了也不亏。</p><hr><h2 id="往年押题卷试用"><a href="#往年押题卷试用" class="headerlink" title="往年押题卷试用"></a>往年押题卷试用</h2><p><strong>链接: <a href="https://pan.baidu.com/s/1DGekNfp3KOB7eF1idCBzig">https://pan.baidu.com/s/1DGekNfp3KOB7eF1idCBzig</a> 提取码: 7iet 复制这段内容后打开百度网盘手机App，操作更方便哦</strong></p><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>本站所有资源全部来源于互联网，分享目的仅供大家学习与参考，</p><p>所有资源，请在下载后24小时内删除，勿作他用。</p><p>如有侵权，请联系 <a href="mailto:2169468487@qq.com">2169468487@qq.com</a> 及时删除！</p>]]></content>
    
    
    <categories>
      
      <category>福利分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>押题卷</tag>
      
      <tag>高考</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cplus note</title>
    <link href="/2023/04/15/Cplus%20note/"/>
    <url>/2023/04/15/Cplus%20note/</url>
    
    <content type="html"><![CDATA[<h2 id="string-类函数"><a href="#string-类函数" class="headerlink" title="string 类函数"></a>string 类函数</h2><h3 id="getline-cin-s"><a href="#getline-cin-s" class="headerlink" title="getline(cin, s)"></a>getline(cin, s)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">getline</span>(cin,temp,delim);<br></code></pre></td></tr></table></figure><ul><li>cin是标准输入流函数</li><li>temp是用来存储字符的变量名</li><li>delim是结束标志</li></ul><p>在使用getline读入一整行时，如果前面使用getchar()、cin这类读入了一个字母，但是不会读入后续换行\n符号或者空格的输入时，再接getline()就容易出现问题。</p><p>这是因为输入数字之后，敲回车，产生的换行符仍然滞留在输入流，接着就被getline(cin,s)给读进去了，此时的s&#x3D;“\n”,所以实际上s只是读入了一个换行符\n。</p><p>而若是前面使用getline()，再又用getline()进行读入，此时不会发生问题。getline()中读入结束的回车后，结束符不放入缓存区，会将读入的\n直接去除，下一个输入前，缓冲区为空，并不会因为回车留下\n。</p><h3 id="反转reverse（s-begin-s-end-）"><a href="#反转reverse（s-begin-s-end-）" class="headerlink" title="反转reverse（s.begin(), s.end()）"></a>反转reverse（s.begin(), s.end()）</h3><p>reverse 是让原数据自己反转哦， 不可以返回值</p><p>string ns &#x3D; reverse（s.begin(), s.end()） ❌</p><h3 id="递归的式子-如dfs-没有返回值-一定要用-void-dfs（）"><a href="#递归的式子-如dfs-没有返回值-一定要用-void-dfs（）" class="headerlink" title="递归的式子 如dfs 没有返回值 一定要用 void dfs（）"></a>递归的式子 如dfs 没有返回值 一定要用 void dfs（）</h3><p>使用int dfs（）回报runtime error错误</p><h3 id="最大公约数-gcd-15-10-返回5"><a href="#最大公约数-gcd-15-10-返回5" class="headerlink" title="最大公约数 __gcd(15, 10)   返回5"></a>最大公约数 __gcd(15, 10)   返回5</h3><p>最小公倍数 (a*b)&#x2F;__gcd(a,b)</p><h3 id="stoi-和-atoi"><a href="#stoi-和-atoi" class="headerlink" title="stoi() 和 atoi()"></a>stoi() 和 atoi()</h3><p>这两个功能虽然都是将<strong>字符串</strong>转化为 <strong>int 类型</strong>，但是还是有区别的，<br><strong>stoi</strong> 的参数是 <strong>const string</strong>* 类型<br><strong>atoi</strong> 的参数是 <strong>const char</strong>* 类型 但是string类可以用转 atoi(s.c_str())</p><h3 id="str-c-str"><a href="#str-c-str" class="headerlink" title="str.c_str()"></a>str.c_str()</h3><p>就是将C++的string转化为C的<a href="https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E4%B8%B2&spm=1001.2101.3001.7020">字符串</a>数组</p><p>c_str()生成一个const char *指针，指向字符串的首地址</p><h3 id="to-string"><a href="#to-string" class="headerlink" title="to_string()"></a>to_string()</h3><p><code> cout&lt;&lt;to_string(123)+&quot;asd&quot;;</code></p><p>功能：将<strong>数字常量</strong>（int,double,long等）转换为<strong>字符串</strong>（string），返回转换好的字符串</p><h3 id="多边形面积公式"><a href="#多边形面积公式" class="headerlink" title="多边形面积公式"></a>多边形面积公式</h3><p>求多边形面积公式：S &#x3D; 0.5 * ( x(0)*y(1) - x(1)*y(0) + x(1)*y(2) - x(2)*y(1) ……x(n)*y(0) - x(1)*y(n)  )</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h3 id="int的数字-要进行浮点数运算-要带-，"><a href="#int的数字-要进行浮点数运算-要带-，" class="headerlink" title="int的数字 要进行浮点数运算 要带.，"></a>int的数字 要进行浮点数运算 要带.，</h3><p> 如2.&#x2F;3.0， 4.0</p><h3 id="很大数要使用long-long-类型"><a href="#很大数要使用long-long-类型" class="headerlink" title="很大数要使用long long 类型"></a>很大数要使用long long 类型</h3><p>莫名奇妙出错用longlong试试， 斐波那契数列数列尤其使用， 还有dp问题</p><h3 id="使用dp-记录前缀和"><a href="#使用dp-记录前缀和" class="headerlink" title="使用dp[] 记录前缀和"></a>使用dp[] 记录前缀和</h3><p>dp[b] - dp[a-1] 为区间内的值；</p><h3 id="TL的问题，试试把cin-cout-改成-scanf-和printf！！！！NB"><a href="#TL的问题，试试把cin-cout-改成-scanf-和printf！！！！NB" class="headerlink" title="TL的问题，试试把cin cout 改成 scanf 和printf！！！！NB*"></a><strong>TL</strong>的问题，试试把cin cout 改成 scanf 和printf！！！！NB*</h3><h3 id="如果函数不是void-但是不给return-会报错Runtime-Error，本地可以运行"><a href="#如果函数不是void-但是不给return-会报错Runtime-Error，本地可以运行" class="headerlink" title="如果函数不是void 但是不给return 会报错Runtime Error，本地可以运行"></a>如果函数不是void 但是不给return 会报错Runtime Error，本地可以运行</h3><h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h3><p>反向取余法 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">while</span>(n)&#123;<br>a[i++] = n%jin;  <br>n /= jin;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="一定要注意"><a href="#一定要注意" class="headerlink" title="一定要注意"></a>一定要注意</h1><p>使用 </p><p>longlong！</p><p>scnaf！</p><p>找规律！</p>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
